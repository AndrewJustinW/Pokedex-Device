{"version":3,"sources":["components/Pokedex.js","App.js","index.js"],"names":["Pokedex","pokemonID","setPokemonID","currentPokemon","setCurrentPokemon","className","src","sprites","front_default","alt","id","onClick","name","toUpperCase","slice","height","weight","types","type","App","useState","useEffect","a","axios","get","res","data","fetchPokemon","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc8332b5.chunk.js","sourcesContent":["import React from 'react'\n// import { useState, useEffect } from \"react\"\n// import axios from \"axios\"\n\n\nconst Pokedex = ({ pokemonID, setPokemonID, currentPokemon, setCurrentPokemon }) => {\n\n    // Next Pokemon\n    const nextPokemon = () => {\n\n        if (pokemonID < 898) {\n            setPokemonID(pokemonID + 1)\n        } else if (pokemonID === 898) {\n            setPokemonID(1)\n        }\n    }\n\n    const prevPokemon = () => {\n\n        if (pokemonID > 1) {\n            setPokemonID(pokemonID - 1)\n        } else if (pokemonID <= 1) {\n            setPokemonID(898)\n        }\n\n    }\n\n    return (\n        <div className=\"pokedex\">\n\n            <div className=\"left-side\">\n\n                <div className=\"left-top\">\n\n                    <div className=\"blue-circle-container\">\n\n                        <div className=\"blue-circle\"></div>\n\n                    </div>\n                    <div className=\"top-lights\">\n                        <span className=\"top-light orange\"></span>\n                        <span className=\"top-light yellow\"></span>\n                        <span className=\"top-light green\"></span>\n\n                    </div>\n                </div>\n\n                <div className=\"left-mid\">\n                    <div className=\"main-screen-container\">\n                        <div className=\"main-screen\">\n                            <img src={currentPokemon ? currentPokemon.sprites.front_default : ''} alt=\"\" />\n                        </div>\n                    </div>\n                    <div className=\"two-buttons\">\n                        <span className=\"button\"> </span>\n                        <span className=\"button\"> </span>\n                    </div>\n                </div>\n\n                <div className=\"left-bottom\">\n\n                    <div className=\"black-button-container\">\n                        <span className=\"black-button\"></span>\n                    </div>\n\n                    <div className=\"bottom-middle\">\n\n                        <div className=\"mini-screen-container\">\n                            <span className=\"mini-screen\">\n                                <h1 ># {currentPokemon ? currentPokemon.id : \"\"}</h1>\n                            </span>\n\n\n                        </div>\n                    </div>\n\n\n                    <div className=\"directional-pad\">\n\n                        <span onClick={() => { prevPokemon() }} className=\"left-direction direction\"></span>\n                        <div className=\"top-and-bottom\">\n                            <span className=\"top-direction direction\"></span>\n                            <span className=\"bottom-direction direction\"></span>\n                        </div>\n                        <span onClick={() => { nextPokemon() }} className=\"right-direction direction\"></span>\n\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"right-side\">\n\n                <div className=\"right-top\">\n\n                    <div className=\"right-screen\">\n\n                        <h3>{currentPokemon ? `${currentPokemon.name[0].toUpperCase() + currentPokemon.name.slice(1)}` : \"\"}  </h3>\n                        <h4>Height: {currentPokemon ? currentPokemon.height : \"\"} </h4>\n                        <h4>Weight: {currentPokemon ? currentPokemon.weight : \"\"}</h4>\n\n                    </div>\n\n                </div>\n\n                <div className=\"right-mid\">\n\n                    <div className=\"top-row\">\n                        <div className=\"box\"></div>\n                        <div className=\"box\"></div>\n                        <div className=\"box\"></div>\n                        <div className=\"box\"></div>\n                        <div className=\"box\"></div>\n\n                    </div>\n\n                    <div className=\"bottom-row\">\n                        <div className=\"box\"></div>\n                        <div className=\"box\"></div>\n                        <div className=\"box\"></div>\n                        <div className=\"box\"></div>\n                        <div className=\"box\"></div>\n                    </div>\n\n                </div>\n\n                <div className=\"right-bot\">\n                    <div className=\"dual-boxes\">\n                        <div className=\"box\"></div>\n                        <div className=\"box\"></div>\n\n                    </div>\n\n                    <div className=\"yellow-button-container\">\n                        <div className=\"yellow-button\">\n\n                        </div>\n\n                    </div>\n\n                    <div className=\"double-screens\">\n                        <div className=\"screen\">\n                            <h4>{currentPokemon ? currentPokemon.types[0].type.name : \"\"}</h4>\n                        </div>\n\n                        <div className=\"screen\">\n                            <h4>{currentPokemon && currentPokemon.types[1] ? currentPokemon.types[1].type.name : \"\"}</h4>\n\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default Pokedex\n\n// {/* <svg height=\"100\" width=\"225\" class=\"left-svg\">\n//                         <polyline\n//                             points=\"0,75 70,75 90,38 224,38\"\n//                             style={{ fill: \"none\", stroke: 'black', strokeWidth: \"5\" }}\n//                         />\n//                     </svg> */}","import Pokedex from \"./components/Pokedex\";\nimport \"./styles/app.scss\"\nimport { useState, useEffect } from \"react\"\nimport axios from \"axios\"\n\n\nfunction App() {\n\n  const [pokemonID, setPokemonID] = useState(1)\n  const [currentPokemon, setCurrentPokemon] = useState()\n\n  useEffect(() => {\n\n    const fetchPokemon = async () => {\n      const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemonID}`)\n\n      setCurrentPokemon(res.data)\n\n    }\n    fetchPokemon()\n\n  }, [pokemonID])\n\n\n  return (\n    <div className=\"App\">\n\n      <Pokedex pokemonID={pokemonID} setPokemonID={setPokemonID} setCurrentPokemon={setCurrentPokemon} currentPokemon={currentPokemon} />\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}